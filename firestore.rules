
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Fungsi helper untuk memeriksa apakah pengguna adalah admin.
    // Memeriksa keberadaan dokumen dan nilai field 'role'.
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/user/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin';
    }

    // Aturan untuk koleksi 'user'
    // Setiap pengguna (termasuk admin) dapat membaca profil mereka sendiri. Ini penting untuk verifikasi peran.
    // Admin dapat membaca profil pengguna lain.
    match /user/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      // Pengguna dapat membuat/memperbarui profil mereka sendiri.
      allow create, update: if request.auth.uid == userId;
      // Hanya admin yang bisa menghapus user (misal: dari halaman manajemen staf)
      allow delete: if isAdmin();
    }
    
    // Aturan untuk sub-koleksi 'addresses' milik user
    match /user/{userId}/addresses/{addressId} {
        // Pengguna hanya bisa mengelola alamat mereka sendiri.
        allow read, write, delete: if request.auth.uid == userId;
    }

    // Aturan untuk koleksi 'products'
    match /products/{productId} {
      // Siapa saja yang sudah login (reseller) dapat membaca produk.
      allow read: if request.auth != null;
      // Hanya admin yang dapat membuat, mengubah, atau menghapus produk.
      allow write: if isAdmin();
    }

    // Aturan untuk koleksi 'orders'
    match /orders/{orderId} {
      // Reseller hanya dapat membuat pesanan untuk diri mereka sendiri.
      allow create: if request.auth.uid == request.resource.data.customerId;
      
      // Admin dapat membaca/mengubah SEMUA pesanan (untuk dashboard & manajemen).
      // Reseller hanya dapat membaca/mengubah pesanan MEREKA SENDIRI.
      allow read, update: if isAdmin() || (request.auth.uid == resource.data.customerId);

      // Hanya admin yang bisa menghapus pesanan.
      allow delete: if isAdmin();
    }

    // Koleksi yang hanya dapat diakses oleh Admin
    match /stock_adjustments/{docId} {
      allow read, write: if isAdmin();
    }
    match /purchase_transactions/{docId} {
      allow read, write: if isAdmin();
    }
    match /operational_expenses/{docId} {
      allow read, write: if isAdmin();
    }
    
    // Koleksi yang bisa dibaca oleh semua pengguna terautentikasi, tapi hanya ditulis oleh admin
    match /bank_accounts/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    match /whatsapp_contacts/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Koleksi yang bisa dibaca oleh siapa saja (bahkan yang tidak login), tapi hanya ditulis oleh admin
    match /banners/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    match /promotions/{docId} {
        allow read: if true; // Promo bisa dilihat oleh semua
        allow write: if isAdmin();
    }
    match /trending_products/{docId} {
        allow read: if true; // Produk trending bisa dilihat semua
        allow write: if isAdmin();
    }
  }
}
