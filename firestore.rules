rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has the 'admin' role in their own document.
    // This is now only used for write operations, not reads.
    function isAdmin() {
      return get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for user profiles
    match /user/{userId} {
      // Any authenticated user can read their OWN profile to verify their role or get their details.
      // This is crucial for login and profile pages to work for everyone.
      allow get: if request.auth.uid == userId;
      
      // An authenticated user can update their own profile data.
      allow update: if request.auth.uid == userId;

      // An admin can list all users (needed for staff management page).
      // Note: This requires specific queries on the client side to be secure.
      allow list: if isAdmin();
      
      // Users can create their own document on registration. Admins can create staff.
      allow create: if request.auth.uid == userId || isAdmin();
      
      // Only admins can delete user documents.
      allow delete: if isAdmin();

      // Rules for user addresses subcollection
      match /addresses/{addressId} {
        // A user can manage their own addresses. Admins can also manage them.
        allow read, write, create, delete: if request.auth.uid == userId || isAdmin();
      }
    }

    // Rules for products, promotions, and trending products
    // Any authenticated user (admin or reseller) can read these.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if isAdmin(); // create, update, delete
    }
    match /promotions/{promoId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
     match /trending_products/{productId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    // Orders Collection
    match /orders/{orderId} {
        // A reseller can create their own order.
        allow create: if request.auth.uid == request.resource.data.customerId;
        
        // A user can get their own order. Admin can get any order.
        allow get: if request.auth.uid == resource.data.customerId || isAdmin();
        
        // A user can list THEIR OWN orders. An admin can list ALL orders.
        // This requires the client to ALWAYS include a where('customerId', '==', request.auth.uid) clause for resellers.
        allow list: if request.resource.data.customerId == request.auth.uid || isAdmin();
        
        // A reseller can update their own order (e.g. to cancel or upload proof). Admin can update any order.
        allow update: if isAdmin() || (request.auth.uid == resource.data.customerId);
    }
    
    // Admin-only collections for management and settings
    match /stock_adjustments/{docId} {
      allow read, write: if isAdmin();
    }
    match /purchase_transactions/{docId} {
      allow read, write: if isAdmin();
    }
    match /operational_expenses/{docId} {
      allow read, write: if isAdmin();
    }

    // Public-read collections for app functionality
    match /bank_accounts/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    match /whatsapp_contacts/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    match /banners/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
  }
}
