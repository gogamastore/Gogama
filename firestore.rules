rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'user' collection
    match /user/{userId} {
      // Admins can read any user document
      // Regular users can only read their own document
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == userId);
      
      // Admins can create/update any user document
      // Regular users can only update their own document
      allow write: if request.auth != null && (isAdmin() || request.auth.uid == userId);
    }
    
    // Rules for 'products' collection
    match /products/{productId} {
      // Anyone authenticated can read products (for reseller portal)
      allow read: if request.auth != null;
      // Only admins can create, update, or delete products
      allow write: if request.auth != null && isAdmin();
    }
    
    // Rules for 'orders' collection
    match /orders/{orderId} {
       // Admins can read any order
       // Authenticated users can read their own orders
       allow read: if request.auth != null && (isAdmin() || request.resource.data.customerId == request.auth.uid);
       
       // Admins can update/delete any order
       // Authenticated users can create orders and update their own (e.g. upload payment proof)
       allow write: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.customerId || request.auth.uid == request.resource.data.customerId);
    }

    // Rules for 'stock_adjustments'
    match /stock_adjustments/{adjustmentId} {
        // Only admins can read or write stock adjustments
        allow read, write: if request.auth != null && isAdmin();
    }

    // Rules for 'purchase_transactions'
    match /purchase_transactions/{transactionId} {
       // Only admins can read or write purchase transactions
       allow read, write: if request.auth != null && isAdmin();
    }
    
    // Rules for 'operational_expenses'
    match /operational_expenses/{expenseId} {
        // Only admins can read or write operational expenses
        allow read, write: if request.auth != null && isAdmin();
    }

    // Rules for 'bank_accounts'
    match /bank_accounts/{accountId} {
      // Any authenticated user can read (for reseller checkout)
      allow read: if request.auth != null;
      // Only admins can write
      allow write: if request.auth != null && isAdmin();
    }

    // Rules for user-specific subcollections like addresses
    match /user/{userId}/addresses/{addressId} {
      // A user can manage their own addresses
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
