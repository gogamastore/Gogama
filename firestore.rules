{
  "rules": {
    "databases": [{
      "database": "(default)",
      "rules": {
        "user/{userId}": {
          "allow read": "request.auth != null && request.auth.uid == userId",
          "allow create": "request.auth != null",
          "allow write": "request.auth != null && request.auth.uid == userId || get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin'"
        },
        "user/{userId}/addresses/{addressId}": {
          "allow read, write, delete, create": "request.auth != null && request.auth.uid == userId"
        },
        "products/{productId}": {
          "allow read": "request.auth != null",
          "allow create, update, delete": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin'"
        },
        "stock_adjustments/{adjustmentId}": {
          "allow read, create, update, delete": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin'"
        },
        "orders/{orderId}": {
          // Aturan untuk query (list): Izinkan jika query secara eksplisit memfilter berdasarkan customerId.
          "allow list": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin' || request.query.resource.data.customerId == request.auth.uid",
          // Aturan untuk get (baca satu dokumen): Izinkan jika admin atau pemilik pesanan.
          "allow get": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin' || resource.data.customerId == request.auth.uid",
          "allow create": "request.auth != null",
          "allow update": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin' || resource.data.customerId == request.auth.uid"
        },
        "bank_accounts/{accountId}": {
          "allow read, create, update, delete": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin'"
        },
        "purchase_transactions/{transactionId}": {
          "allow read, create, update, delete": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin'"
        },
        "operational_expenses/{expenseId}": {
          "allow read, create, update, delete": "get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin'"
        }
      }
    }]
  }
}