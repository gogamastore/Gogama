
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/user/$(request.auth.uid)).data.role == 'admin';
    }

    // Aturan untuk Koleksi 'user'
    match /user/{userId} {
      // Admin dapat melakukan apa saja pada koleksi user
      allow read, write, delete: if isAdmin();
      
      // Pengguna biasa hanya dapat membaca dan memperbarui data mereka sendiri, tetapi tidak bisa menghapus
      allow get, update: if request.auth.uid == userId;
    }

    // Aturan untuk Koleksi 'products'
    match /products/{productId} {
      allow read: if request.auth != null; // Semua pengguna terotentikasi bisa membaca produk
      allow write: if isAdmin(); // Hanya admin yang bisa membuat/mengubah produk
    }

    // Aturan untuk Koleksi 'orders'
    match /orders/{orderId} {
      // Admin bisa membaca semua pesanan
      // Reseller bisa membuat pesanan baru dan membaca pesanan mereka sendiri
      allow read, create: if request.auth != null;
      allow update: if isAdmin(); // Hanya admin yang bisa mengubah status pesanan
    }

    // Aturan untuk Koleksi 'purchase_transactions'
    match /purchase_transactions/{transactionId} {
      allow read, write: if isAdmin(); // Hanya admin yang bisa mengelola transaksi pembelian
    }
    
    // Aturan untuk Koleksi 'operational_expenses'
    match /operational_expenses/{expenseId} {
        allow read, write: if isAdmin(); // Hanya admin yang bisa mengelola biaya operasional
    }

    // Aturan untuk Koleksi 'stock_adjustments'
    match /stock_adjustments/{adjustmentId} {
        allow read, write: if isAdmin(); // Hanya admin yang bisa mengelola penyesuaian stok
    }

    // Aturan untuk Koleksi 'bank_accounts'
    match /bank_accounts/{accountId} {
        allow read: if request.auth != null; // Semua pengguna terotentikasi bisa membaca rekening
        allow write, delete: if isAdmin(); // Hanya admin yang bisa menambah/menghapus rekening
    }

     // Aturan untuk subkoleksi alamat pengguna
    match /user/{userId}/addresses/{addressId} {
      // Pengguna hanya bisa mengelola alamat mereka sendiri
      allow read, write, delete: if request.auth.uid == userId;
    }
  }
}
