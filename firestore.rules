
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      // Admin role is stored in Realtime Database
      return get(/databases/(default)/documents/user/$(request.auth.uid)).data.role == 'admin';
    }

    // Products: Resellers can read, Admins can write
    match /products/{productId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Stock Adjustments: Admin only
    match /stock_adjustments/{adjustmentId} {
        allow read, write: if request.auth != null && isAdmin();
    }

    // Orders: 
    // - Resellers can create their own orders.
    // - Resellers can read ONLY their own orders.
    // - Admins can read and write all orders.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.customerId == request.auth.uid;
      allow read, update, delete: if request.auth != null && (
        (resource.data.customerId == request.auth.uid) || isAdmin()
      );
    }
    
    // User Data:
    // - Admins can read/write any user document.
    // - Resellers can read/write their OWN user document.
    match /user/{userId} {
      allow read, update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && isAdmin(); // Only admins can create new staff users
      
      // Addresses subcollection: Users can manage their own addresses.
      match /addresses/{addressId} {
          allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Bank Accounts: Admin only
    match /bank_accounts/{accountId} {
      allow read, write: if request.auth != null && isAdmin();
    }
    
    // Operational Expenses: Admin only
    match /operational_expenses/{expenseId} {
        allow read, write: if request.auth != null && isAdmin();
    }
    
    // Purchase Transactions: Admin only
    match /purchase_transactions/{purchaseId} {
        allow read, write: if request.auth != null && isAdmin();
    }
  }
}
